name: Deploy DEV (Production Server)

on:
  push:
    branches: [development]

  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag to deploy"
        required: true
        default: "development"

env:
  REGISTRY: docker.io
  IMAGE_NAME: feerdus95/academianovit
  DEFAULT_TAG: development

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set image tag
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ env.DEFAULT_TAG }}" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Re-tag images in registry
        run: |
          TAG="${{ steps.set_tag.outputs.tag }}"
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:backup-$TIMESTAMP
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:backup-$TIMESTAMP

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts || true

      - name: Copy docker files to server
        run: |
          scp -P ${{ secrets.SSH_PORT }} docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/
          scp -P ${{ secrets.SSH_PORT }} docker-swarm.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/

      - name: Deploy to Production
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            DEPLOY_TAG="${{ steps.set_tag.outputs.tag }}"
            
            echo "=== Starting deployment ==="
            
            # Login to Docker Hub
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            # Pull image
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$DEPLOY_TAG
            
            # Deploy with docker-compose
            docker-compose down || true
            docker-compose up -d
            
            # Show running containers
            docker ps
            
            # Deploy with Swarm (5 replicas)
            IMAGE_TAG=$DEPLOY_TAG docker stack deploy -c docker-swarm.yml academia-novit
            
            # Wait for services
            sleep 10
            
            # Show services
            docker service ls
            
            echo "=== Deployment completed ==="
          EOF
